{
  "openapi": "3.0.0",
  "info": {
    "version": "1.0.0",
    "title": "BPkar Application API",
    "description": "API Documentation for Aplication Service"
  },
  "servers": [
    {
      "url": "http://localhost:4040",
      "description": "Development server"
    }
  ],
  "paths": {
    "/login/": {
      "post": {
        "tags": [
          "Login"
        ],
        "description": "Authenticate user with email and password",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "description": "User credentials",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "email": {
                  "type": "string",
                  "example": "user@example.com"
                },
                "password": {
                  "type": "string",
                  "example": "password"
                }
              }
            }
          }
        ],
        "responses": {
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InternalServerError"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/InternalServerError"
                }
              }
            }
          }
        },
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "email": {
                    "example": "any"
                  },
                  "password": {
                    "example": "any"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/users/": {
      "get": {
        "tags": [
          "Users"
        ],
        "description": "",
        "parameters": [
          {
            "name": "_page",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "_size",
            "in": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InternalServerError"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/InternalServerError"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      },
      "post": {
        "tags": [
          "Users"
        ],
        "description": "",
        "responses": {
          "201": {
            "description": "Created"
          },
          "400": {
            "description": "Bad Request"
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InternalServerError"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/InternalServerError"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/User"
              }
            },
            "application/xml": {
              "schema": {
                "$ref": "#/components/schemas/User"
              }
            }
          }
        }
      }
    },
    "/api/users/{id}": {
      "get": {
        "tags": [
          "Users"
        ],
        "description": "",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "404": {
            "description": "User not found"
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InternalServerError"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/InternalServerError"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      },
      "put": {
        "tags": [
          "Users"
        ],
        "description": "",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "404": {
            "description": "User not found"
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InternalServerError"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/InternalServerError"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/User"
              }
            },
            "application/xml": {
              "schema": {
                "$ref": "#/components/schemas/User"
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Users"
        ],
        "description": "Delete a user by ID",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "User deleted successfully"
          },
          "404": {
            "description": "User not found"
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InternalServerError"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/InternalServerError"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      }
    }
  },
  "components": {
    "schemas": {
      "InternalServerError": {
        "type": "object",
        "properties": {
          "code": {
            "type": "number",
            "example": 500
          },
          "message": {
            "type": "string",
            "example": "Internal Server Error"
          }
        },
        "xml": {
          "name": "InternalServerError"
        }
      },
      "User": {
        "type": "object",
        "properties": {
          "id": {
            "type": "number",
            "example": 1
          },
          "name": {
            "type": "string",
            "example": "John"
          },
          "last_name": {
            "type": "string",
            "example": "Doe"
          },
          "email": {
            "type": "string",
            "example": "john.doe@example.com"
          },
          "password": {
            "type": "string",
            "example": "hashed_password"
          },
          "cpf": {
            "type": "string",
            "example": "123.456.789-00"
          },
          "phone": {
            "type": "string",
            "example": "(11) 98765-4321"
          },
          "street": {
            "type": "string",
            "example": "Main Avenue"
          },
          "number": {
            "type": "number",
            "example": 123
          },
          "city": {
            "type": "string",
            "example": "SÃ£o Paulo"
          },
          "zipcode": {
            "type": "string",
            "example": "01000-000"
          },
          "createAt": {
            "type": "string",
            "example": "2025-05-18T12:00:00Z"
          },
          "updatedAt": {
            "type": "string",
            "example": "2025-05-18T12:00:00Z"
          },
          "verified": {
            "type": "boolean",
            "example": true
          }
        },
        "xml": {
          "name": "User"
        }
      },
      "UserCreate": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "example": "John"
          },
          "last_name": {
            "type": "string",
            "example": "Doe"
          },
          "email": {
            "type": "string",
            "example": "john.doe@example.com"
          },
          "password": {
            "type": "string",
            "example": "password123"
          },
          "cpf": {
            "type": "string",
            "example": "123.456.789-00"
          },
          "phone": {
            "type": "string",
            "example": "(11) 98765-4321"
          },
          "street": {
            "type": "string",
            "example": "Main Avenue"
          },
          "number": {
            "type": "number",
            "example": 123
          },
          "city": {
            "type": "string",
            "example": "SÃ£o Paulo"
          },
          "zipcode": {
            "type": "string",
            "example": "01000-000"
          }
        },
        "xml": {
          "name": "UserCreate"
        }
      },
      "UserResponse": {
        "type": "object",
        "properties": {
          "id": {
            "type": "number",
            "example": 1
          },
          "name": {
            "type": "string",
            "example": "John"
          },
          "last_name": {
            "type": "string",
            "example": "Doe"
          },
          "email": {
            "type": "string",
            "example": "john.doe@example.com"
          },
          "cpf": {
            "type": "string",
            "example": "123.456.789-00"
          },
          "phone": {
            "type": "string",
            "example": "(11) 98765-4321"
          },
          "street": {
            "type": "string",
            "example": "Main Avenue"
          },
          "number": {
            "type": "number",
            "example": 123
          },
          "city": {
            "type": "string",
            "example": "SÃ£o Paulo"
          },
          "zipcode": {
            "type": "string",
            "example": "01000-000"
          },
          "createAt": {
            "type": "string",
            "example": "2025-05-18T12:00:00Z"
          },
          "updatedAt": {
            "type": "string",
            "example": "2025-05-18T12:00:00Z"
          },
          "verified": {
            "type": "boolean",
            "example": true
          }
        },
        "xml": {
          "name": "UserResponse"
        }
      },
      "Driver": {
        "type": "object",
        "properties": {
          "id": {
            "type": "number",
            "example": 1
          },
          "cnhVerified": {
            "type": "boolean",
            "example": true
          },
          "userId": {
            "type": "number",
            "example": 1
          }
        },
        "xml": {
          "name": "Driver"
        }
      },
      "DriverCreate": {
        "type": "object",
        "properties": {
          "userId": {
            "type": "number",
            "example": 1
          }
        },
        "xml": {
          "name": "DriverCreate"
        }
      },
      "Passenger": {
        "type": "object",
        "properties": {
          "id": {
            "type": "number",
            "example": 1
          },
          "active": {
            "type": "boolean",
            "example": true
          },
          "userId": {
            "type": "number",
            "example": 1
          }
        },
        "xml": {
          "name": "Passenger"
        }
      },
      "PassengerCreate": {
        "type": "object",
        "properties": {
          "userId": {
            "type": "number",
            "example": 1
          }
        },
        "xml": {
          "name": "PassengerCreate"
        }
      },
      "RideGroup": {
        "type": "object",
        "properties": {
          "id": {
            "type": "number",
            "example": 1
          },
          "name": {
            "type": "string",
            "example": "Work Carpool"
          },
          "description": {
            "type": "string",
            "example": "Daily rides to work"
          },
          "driverId": {
            "type": "number",
            "example": 1
          },
          "createdAt": {
            "type": "string",
            "example": "2025-05-18T12:00:00Z"
          },
          "updatedAt": {
            "type": "string",
            "example": "2025-05-18T12:00:00Z"
          }
        },
        "xml": {
          "name": "RideGroup"
        }
      },
      "RideGroupCreate": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "example": "Work Carpool"
          },
          "description": {
            "type": "string",
            "example": "Daily rides to work"
          },
          "driverId": {
            "type": "number",
            "example": 1
          }
        },
        "xml": {
          "name": "RideGroupCreate"
        }
      },
      "RideGroupMember": {
        "type": "object",
        "properties": {
          "id": {
            "type": "number",
            "example": 1
          },
          "joinDate": {
            "type": "number",
            "example": 20250518
          },
          "createdAt": {
            "type": "string",
            "example": "2025-05-18T12:00:00Z"
          },
          "updatedAt": {
            "type": "string",
            "example": "2025-05-18T12:00:00Z"
          },
          "groupId": {
            "type": "number",
            "example": 1
          },
          "passengerId": {
            "type": "number",
            "example": 1
          }
        },
        "xml": {
          "name": "RideGroupMember"
        }
      },
      "RideGroupMemberCreate": {
        "type": "object",
        "properties": {
          "groupId": {
            "type": "number",
            "example": 1
          },
          "passengerId": {
            "type": "number",
            "example": 1
          }
        },
        "xml": {
          "name": "RideGroupMemberCreate"
        }
      },
      "ScheduledRide": {
        "type": "object",
        "properties": {
          "id": {
            "type": "number",
            "example": 1
          },
          "scheduledDate": {
            "type": "string",
            "example": "2025-05-20T08:30:00Z"
          },
          "estimatedCost": {
            "type": "number",
            "example": 25.5
          },
          "availableSeats": {
            "type": "number",
            "example": 3
          },
          "totalSeats": {
            "type": "number",
            "example": 4
          },
          "startLocation": {
            "type": "string",
            "example": "Downtown"
          },
          "endLocation": {
            "type": "string",
            "example": "University Campus"
          },
          "distance": {
            "type": "number",
            "example": 15.3
          },
          "createdAt": {
            "type": "string",
            "example": "2025-05-18T12:00:00Z"
          },
          "updatedAt": {
            "type": "string",
            "example": "2025-05-18T12:00:00Z"
          },
          "groupId": {
            "type": "number",
            "example": 1
          },
          "driverId": {
            "type": "number",
            "example": 1
          }
        },
        "xml": {
          "name": "ScheduledRide"
        }
      },
      "ScheduledRideCreate": {
        "type": "object",
        "properties": {
          "scheduledDate": {
            "type": "string",
            "example": "2025-05-20T08:30:00Z"
          },
          "estimatedCost": {
            "type": "number",
            "example": 25.5
          },
          "availableSeats": {
            "type": "number",
            "example": 3
          },
          "totalSeats": {
            "type": "number",
            "example": 4
          },
          "startLocation": {
            "type": "string",
            "example": "Downtown"
          },
          "endLocation": {
            "type": "string",
            "example": "University Campus"
          },
          "distance": {
            "type": "number",
            "example": 15.3
          },
          "groupId": {
            "type": "number",
            "example": 1
          },
          "driverId": {
            "type": "number",
            "example": 1
          }
        },
        "xml": {
          "name": "ScheduledRideCreate"
        }
      },
      "Ride": {
        "type": "object",
        "properties": {
          "id": {
            "type": "number",
            "example": 1
          },
          "startLocation": {
            "type": "string",
            "example": "Downtown"
          },
          "endLocation": {
            "type": "string",
            "example": "University Campus"
          },
          "distance": {
            "type": "number",
            "example": 15.3
          },
          "departureTime": {
            "type": "string",
            "example": "2025-05-18T08:30:00Z"
          },
          "totalCost": {
            "type": "number",
            "example": 25.5
          },
          "fuelPrice": {
            "type": "number",
            "example": 5.79
          },
          "createdAt": {
            "type": "string",
            "example": "2025-05-18T12:00:00Z"
          },
          "updatedAt": {
            "type": "string",
            "example": "2025-05-18T12:00:00Z"
          },
          "driverId": {
            "type": "number",
            "example": 1
          }
        },
        "xml": {
          "name": "Ride"
        }
      },
      "RideCreate": {
        "type": "object",
        "properties": {
          "startLocation": {
            "type": "string",
            "example": "Downtown"
          },
          "endLocation": {
            "type": "string",
            "example": "University Campus"
          },
          "distance": {
            "type": "number",
            "example": 15.3
          },
          "departureTime": {
            "type": "string",
            "example": "2025-05-18T08:30:00Z"
          },
          "totalCost": {
            "type": "number",
            "example": 25.5
          },
          "fuelPrice": {
            "type": "number",
            "example": 5.79
          },
          "driverId": {
            "type": "number",
            "example": 1
          }
        },
        "xml": {
          "name": "RideCreate"
        }
      },
      "RideRequest": {
        "type": "object",
        "properties": {
          "id": {
            "type": "number",
            "example": 1
          },
          "startLocation": {
            "type": "string",
            "example": "Home"
          },
          "endLocation": {
            "type": "string",
            "example": "University Campus"
          },
          "status": {
            "type": "string",
            "example": "pending"
          },
          "passengerShare": {
            "type": "number",
            "example": 12.75
          },
          "createdAt": {
            "type": "string",
            "example": "2025-05-18T12:00:00Z"
          },
          "updatedAt": {
            "type": "string",
            "example": "2025-05-18T12:00:00Z"
          },
          "rideId": {
            "type": "number",
            "example": 1
          },
          "passengerId": {
            "type": "number",
            "example": 1
          }
        },
        "xml": {
          "name": "RideRequest"
        }
      },
      "RideRequestCreate": {
        "type": "object",
        "properties": {
          "startLocation": {
            "type": "string",
            "example": "Home"
          },
          "endLocation": {
            "type": "string",
            "example": "University Campus"
          },
          "rideId": {
            "type": "number",
            "example": 1
          },
          "passengerId": {
            "type": "number",
            "example": 1
          }
        },
        "xml": {
          "name": "RideRequestCreate"
        }
      },
      "Vehicle": {
        "type": "object",
        "properties": {
          "id": {
            "type": "number",
            "example": 1
          },
          "model": {
            "type": "string",
            "example": "Civic"
          },
          "brand": {
            "type": "string",
            "example": "Honda"
          },
          "year": {
            "type": "number",
            "example": 2023
          },
          "phone": {
            "type": "string",
            "example": "(11) 98765-4321"
          },
          "street": {
            "type": "string",
            "example": "Main Avenue"
          },
          "number": {
            "type": "number",
            "example": 123
          },
          "renavam": {
            "type": "string",
            "example": "12345678901"
          },
          "plate": {
            "type": "string",
            "example": "ABC1234"
          },
          "fuelConsumption": {
            "type": "number",
            "example": 12.5
          },
          "createAt": {
            "type": "string",
            "example": "2025-05-18T12:00:00Z"
          },
          "updatedAt": {
            "type": "string",
            "example": "2025-05-18T12:00:00Z"
          },
          "driverId": {
            "type": "number",
            "example": 1
          }
        },
        "xml": {
          "name": "Vehicle"
        }
      },
      "VehicleCreate": {
        "type": "object",
        "properties": {
          "model": {
            "type": "string",
            "example": "Civic"
          },
          "brand": {
            "type": "string",
            "example": "Honda"
          },
          "year": {
            "type": "number",
            "example": 2023
          },
          "phone": {
            "type": "string",
            "example": "(11) 98765-4321"
          },
          "street": {
            "type": "string",
            "example": "Main Avenue"
          },
          "number": {
            "type": "number",
            "example": 123
          },
          "renavam": {
            "type": "string",
            "example": "12345678901"
          },
          "plate": {
            "type": "string",
            "example": "ABC1234"
          },
          "fuelConsumption": {
            "type": "number",
            "example": 12.5
          },
          "driverId": {
            "type": "number",
            "example": 1
          }
        },
        "xml": {
          "name": "VehicleCreate"
        }
      }
    },
    "securitySchemes": {
      "bearerAuth": {
        "type": "http",
        "scheme": "bearer",
        "bearerFormat": "JWT"
      }
    }
  },
  "security": [
    {
      "bearerAuth": []
    }
  ]
}