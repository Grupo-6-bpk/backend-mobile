generator client {
  provider      = "prisma-client-js"
  binaryTargets = ["native", "linux-musl-openssl-3.0.x"]
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model User {
  id        Int        @id @default(autoincrement())
  name      String     @db.VarChar(255)
  last_name String     @db.VarChar(255)
  email     String?    @db.VarChar(255)
  password  String     @db.VarChar(255)
  cpf       String?    @db.VarChar(45)
  phone     String?    @db.VarChar(45)
  street    String?    @db.VarChar(45)
  number    Int?
  city      String?    @db.VarChar(45)
  zipcode   String?    @db.VarChar(45)
  createAt  DateTime?  @default(now()) @map("create_at")
  updatedAt DateTime?  @map("updated_at")
  active    Boolean?
  verified  Boolean?   @map("verified")
  driver    Driver?
  passenger Passenger?

  @@map("user")
}

model Driver {
  id            Int             @id @default(autoincrement())
  cnhVerified   Boolean?        @map("cnh_verified")
  userId        Int             @unique @map("user_id")
  user          User            @relation(fields: [userId], references: [id])
  rides         Ride[]
  ridegroup     ridegroup[]
  scheduledride scheduledride[]
  vehicles      Vehicle[]

  @@map("driver")
}

model Passenger {
  id              Int               @id @default(autoincrement())
  userId          Int               @unique @map("user_id")
  user            User              @relation(fields: [userId], references: [id])
  rideRequests    RideRequest[]
  ridegroupmember ridegroupmember[]

  @@map("passenger")
}

model Ride {
  id            Int           @id @default(autoincrement())
  startLocation String?       @map("start_location") @db.VarChar(255)
  endLocation   String?       @map("end_location") @db.VarChar(255)
  distance      Float?
  departureTime DateTime?     @map("departure_time")
  totalCost     Float?        @map("total_cost")
  fuelPrice     Float?        @map("fuel_price")
  createdAt     DateTime?     @map("created_at")
  updatedAt     DateTime?     @map("updated_at")
  driverId      Int           @map("driver_id")
  driver        Driver        @relation(fields: [driverId], references: [id])
  rideRequests  RideRequest[]

  @@index([driverId], map: "ride_driver_id_fkey")
  @@map("ride")
}

model RideRequest {
  id             Int       @id @default(autoincrement())
  startLocation  String?   @map("start_location") @db.VarChar(255)
  endLocation    String?   @map("end_location") @db.VarChar(255)
  status         String?   @db.VarChar(255)
  passengerShare Float?    @map("passenger_share")
  createdAt      DateTime? @map("created_at")
  updatedAt      DateTime? @map("updated_at")
  rideId         Int       @map("ride_id")
  passengerId    Int       @map("passanger_id")
  passenger      Passenger @relation(fields: [passengerId], references: [id])
  ride           Ride      @relation(fields: [rideId], references: [id])

  @@index([passengerId], map: "ride_request_passanger_id_fkey")
  @@index([rideId], map: "ride_request_ride_id_fkey")
  @@map("ride_request")
}

model Vehicle {
  id              Int       @id @default(autoincrement())
  model           String?   @db.VarChar(255)
  brand           String?   @db.VarChar(255)
  year            Int?
  phone           String?   @db.VarChar(45)
  street          String?   @db.VarChar(45)
  number          Int?
  renavam         String?   @db.VarChar(255)
  plate           String?   @db.VarChar(255)
  fuelConsumption Float?    @map("fuel_consumption")
  createAt        DateTime? @default(now()) @map("create_at")
  updatedAt       DateTime? @map("updated_at")
  driverId        Int       @map("driver_id")
  driver          Driver    @relation(fields: [driverId], references: [id])

  @@index([driverId], map: "vehicle_driver_id_fkey")
  @@map("vehicle")
}

model ridegroup {
  id              Int               @id @default(autoincrement())
  name            String            @db.VarChar(255)
  description     String?           @db.Text
  driver_id       Int
  created_at      DateTime?
  updated_at      DateTime?
  driver          Driver            @relation(fields: [driver_id], references: [id], map: "RideGroup_driver_id_fkey")
  ridegroupmember ridegroupmember[]
  scheduledride   scheduledride[]

  @@index([driver_id], map: "RideGroup_driver_id_fkey")
}

model ridegroupmember {
  id           Int       @id @default(autoincrement())
  join_date    Int?
  created_at   DateTime?
  updated_at   DateTime?
  group_id     Int
  passenger_id Int
  ridegroup    ridegroup @relation(fields: [group_id], references: [id], map: "RideGroupMember_group_id_fkey")
  passenger    Passenger @relation(fields: [passenger_id], references: [id], map: "RideGroupMember_passenger_id_fkey")

  @@index([group_id], map: "RideGroupMember_group_id_fkey")
  @@index([passenger_id], map: "RideGroupMember_passenger_id_fkey")
}

model scheduledride {
  id              Int       @id @default(autoincrement())
  scheduled_date  DateTime?
  estimated_cost  Float?
  available_seats Int?
  total_seats     Int?
  start_location  String?   @db.VarChar(255)
  end_location    String?   @db.VarChar(255)
  distance        Float?
  created_at      DateTime?
  updated_at      DateTime?
  group_id        Int
  driver_id       Int
  driver          Driver    @relation(fields: [driver_id], references: [id], map: "ScheduledRide_driver_id_fkey")
  ridegroup       ridegroup @relation(fields: [group_id], references: [id], map: "ScheduledRide_group_id_fkey")

  @@index([driver_id], map: "ScheduledRide_driver_id_fkey")
  @@index([group_id], map: "ScheduledRide_group_id_fkey")
}
